; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 11
; Bound: 55
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %outColor %fragColor %fragTexCoord
               OpExecutionMode %main OriginUpperLeft
               OpSource GLSL 450
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %outColor "outColor"
               OpName %fragColor "fragColor"
               OpName %texSampler "texSampler"
               OpName %fragTexCoord "fragTexCoord"
               OpName %sum "sum"
               OpName %i "i"
               OpDecorate %outColor Location 0
               OpDecorate %fragColor Location 0
               OpDecorate %texSampler DescriptorSet 0
               OpDecorate %texSampler Binding 1
               OpDecorate %fragTexCoord Location 1
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
   %outColor = OpVariable %_ptr_Output_v4float Output
    %v3float = OpTypeVector %float 3
%_ptr_Input_v3float = OpTypePointer Input %v3float
  %fragColor = OpVariable %_ptr_Input_v3float Input
         %14 = OpTypeImage %float 2D 0 0 0 1 Unknown
         %15 = OpTypeSampledImage %14
%_ptr_UniformConstant_15 = OpTypePointer UniformConstant %15
 %texSampler = OpVariable %_ptr_UniformConstant_15 UniformConstant
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
%fragTexCoord = OpVariable %_ptr_Input_v2float Input
    %float_1 = OpConstant %float 1
%_ptr_Function_v4float = OpTypePointer Function %v4float
    %float_0 = OpConstant %float 0
         %34 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
       %bool = OpTypeBool
%float_0_100000001 = OpConstant %float 0.100000001
         %49 = OpConstantComposite %v4float %float_0_100000001 %float_0_100000001 %float_0_100000001 %float_0_100000001
       %main = OpFunction %void None %3
          %5 = OpLabel
        %sum = OpVariable %_ptr_Function_v4float Function
          %i = OpVariable %_ptr_Function_int Function
         %13 = OpLoad %v3float %fragColor
         %18 = OpLoad %15 %texSampler
         %22 = OpLoad %v2float %fragTexCoord
         %23 = OpImageSampleImplicitLod %v4float %18 %22
         %24 = OpVectorShuffle %v3float %23 %23 0 1 2
         %25 = OpFMul %v3float %13 %24
         %27 = OpCompositeExtract %float %25 0
         %28 = OpCompositeExtract %float %25 1
         %29 = OpCompositeExtract %float %25 2
         %30 = OpCompositeConstruct %v4float %27 %28 %29 %float_1
               OpStore %outColor %30
               OpStore %sum %34
               OpStore %i %int_1
               OpBranch %39
         %39 = OpLabel
               OpLoopMerge %41 %42 None
               OpBranch %43
         %43 = OpLabel
         %44 = OpLoad %int %i
         %47 = OpINotEqual %bool %44 %int_2
               OpBranchConditional %47 %40 %41
         %40 = OpLabel
         %50 = OpLoad %v4float %sum
         %51 = OpFAdd %v4float %50 %49
               OpStore %sum %51
               OpBranch %42
         %42 = OpLabel
         %52 = OpLoad %int %i
         %53 = OpIAdd %int %52 %int_2
               OpStore %i %53
               OpBranch %39
         %41 = OpLabel
         %54 = OpLoad %v4float %sum
               OpStore %outColor %54
               OpReturn
               OpFunctionEnd
